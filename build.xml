<project name="processFlowProvision-distro" default="all" xmlns:artifact="antlib:org.apache.maven.artifact.ant" >

    <property environment="ENV"/>
    <property file="build.properties" />

    <import file="base-build.xml"/>

    <target name="refresh.master" >
        <echo message="***** refresh.master :  will now call the following target :  local.stop.master, clone.jboss, and local.start.master" />
        <antcall target="local.stop.master"  />
        <!-- antcall target="configureJbossAdmin" / -->
        <antcall target="pfp.clean" />
        <mkdir dir="${install.home}/lib" />
        <antcall target="clone.jboss" />
        <antcall target="local.deploy.jboss.modules" />
        <antcall target="configure.pfp.app" />
        <antcall target="addUserRoleConfigs" >
            <param name="config.path" value="${jboss.home}/${jboss.domain.base.dir}/configuration" />
        </antcall>
        <antcall target="local.start.master"  />
        <antcall target="cli.batch">
                <param name="cli.source.dir" value="conf/jboss/"/>
                <param name="cli.to.filter.and.execute" value="jboss-config.cli"/>
        </antcall>
        <antcall target="provision.jboss.with.jdbc" />
    </target>

    <target name="refresh.slave.hosts" depends="setClasspath" >
        <for list="${org.jboss.eap.host.list}" param="serverIpAddr">
            <sequential>
                <var name="serverIpAddr" value="@{serverIpAddr}" />
                <if>
                    <not><equals arg1="${serverIpAddr}" arg2="master" /></not>
                    <then>
                        <echo message="refresh.slave.hosts() serverIpAddr = ${serverIpAddr}" />
                        <java fork="yes" classname="org.jboss.processFlow.util.GeneratePasswordHash" failonerror="true">
                            <sysproperty key="USER_ID" value="${serverIpAddr}" />
                            <sysproperty key="REALM" value="ManagementRealm" />
                            <sysproperty key="PASSWORD" value="${jboss.admin.password}" />
                            <sysproperty key="MGT_USERS_PROPS_FILE" value="${jboss.home}/${jboss.domain.base.dir}/configuration/mgmt-users.properties" />
                            <sysproperty key="log4j.configuration" value="file:${development.base}/conf/test/log4j.xml" />
                            <classpath refid="classpath"/>
                        </java>
                        <antcall target="filter">
                            <param name="source.dir" value="conf/jboss/supported/slave"/>
                            <param name="dest.dir" value="${temp.jboss.dir}/domain-${organization.name}/configuration"/>
                        </antcall>
                        <exec executable="bash" failonerror="true" dir=".">
                            <arg value="bin/local.jboss.domain.sh" />
                            <arg value="refreshSlaveHosts" />
                            <arg value="-serverIpAddr=${serverIpAddr}" />
                            <arg value="-orgName=${organization.name}" />
                            <arg value="-localGuvnorRepoLocation=${local.guvnor.repo.location}" />
                            <arg value="-eap6DownloadName=${eap6.download.name}" />
                            <arg value="-switchyardZipName=${switchyard.zip.name}" />
                        </exec>
                    </then>
                </if>
            </sequential>
        </for>
        <sleep seconds="5"/> <!-- sleep 5 seconds in case slave hosts need extra time to start -->
    </target>

    <target name="checkServersAndProjectLib">
        <available file="${JBOSS_HOME}/jboss-modules.jar" property="defaultServerExists" />
        <fail unless="defaultServerExists" message="${JBOSS_HOME}/jboss-modules.jar doesn't exist! .... please fix your $JBOSS_HOME environment variable!!" />
        <condition property="projectLibNotExist">
            <not>
                <available file="${project.lib}" />
            </not>
        </condition>
        <condition property="projectLibExists">
                <available file="${project.lib}" />
        </condition>
    </target>

    <!-- create a clone of the JBoss EAP 'domain' config and name it the value of ${jboss.domain.base.dir} -->
    <target name="clone.jboss" >
        <if>
            <not><available file="${jboss.home}/domain/configuration/domain.xml" /></not>
            <then>
                <get src="${eap6.download.url}" dest="${install.home}/lib/"  skipexisting="true" />
                <unzip src="${install.home}/lib/${eap6.name}" dest="${jboss.home}/.." />
            </then>
        </if>
        <delete dir="${jboss.home}/${jboss.domain.base.dir}" />
        <copy overwrite="true" todir="${jboss.home}/${jboss.domain.base.dir}">
            <fileset dir="${jboss.home}/domain" />
        </copy>
        <antcall target="filter">
            <param name="source.dir" value="conf/jboss/supported"/>
            <param name="file.name" value="domain.xml"/>
            <param name="dest.dir" value="${jboss.home}/${jboss.domain.base.dir}/configuration"/>
        </antcall>
        <copy file="conf/jboss/supported/host.xml" todir="${jboss.home}/${jboss.domain.base.dir}/configuration" overwrite="true" verbose="true" />
    </target>

    <target name="provision.jboss.with.jdbc" >
        <property name="db.script" value="${jdbc.module.name}-config-up.cli" />
        <antcall target="cli.batch">
            <param name="cli.source.dir" value="conf/jboss"/>
            <param name="cli.to.filter.and.execute" value="${db.script}"/>
            <param name="cli.fail.on.error" value="true"/>
        </antcall>
    </target>


    <!-- see:  <as7-source>/domain-management/src/main/java/org/jboss/as/domain/management/security/AddPropertiesUser.java -->
    <!-- does not work in as7.1.2.Final due to :
            Exception in thread "main" java.lang.IllegalStateException: JBAS015232: No java.io.Console available to interact with user.
            at org.jboss.as.domain.management.security.AddPropertiesUser.<init>(AddPropertiesUser.java:108)
            at org.jboss.as.domain.management.security.AddPropertiesUser.<init>(AddPropertiesUser.java:119)
            at org.jboss.as.domain.management.security.AddPropertiesUser.main(AddPropertiesUser.java:167)

        - appears this is fixed in 7.2.*
    -->
    <target name="configureJbossAdmin" >
        <exec executable="bash" failonerror="true" dir=".">
            <arg value="bin/local.jboss.domain.sh" />
            <arg value="executeAddUser" />
            <arg value="-isAdmin=true" />
            <arg value="-userId=${jboss.admin.id}"/>
            <arg value="-password=${jboss.admin.password}"/>
        </exec>
    </target>

    <target name="unzip.brms.deployer">
        <get src="${brms.download.url}" dest="${install.home}/lib/${brms.deployer.zip.name}"  skipexisting="true" />
    </target>

    <!-- https://github.com/jboss-sso/processFlowProvision/issues/3 -->
    <target name="download.and.unzip.bpms.deployer">
        <!-- get src="${bpms.download.url}" dest="${install.home}/lib/${bpms.deployer.zip.name}"  skipexisting="true" />
        <unzip src="${install.home}/lib/${bpms.deployer.zip.name}" dest="${jboss.home}" / -->
    </target>

    <!-- re-create guvnor filesystem and copy over repository.xml -->
    <target name="local.refresh.guvnor" >
        <delete dir="${local.guvnor.repo.location}" />
        <mkdir dir="${local.guvnor.repo.location}" />
    </target>

    <target name="addUserRoleConfigs" >
        <fail unless="config.path" message="addUserRoleConfigs:  need to pass 'config.path' property" />
        <copy file="conf/jboss/application-roles.properties" todir="${temp.jboss.dir}/domain-${organization.name}/configuration" verbose="true" overwrite="true" />
        <copy file="conf/jboss/application-users.properties" todir="${temp.jboss.dir}/domain-${organization.name}/configuration" verbose="true" overwrite="true" />
        <copy file="${temp.jboss.dir}/domain-${organization.name}/configuration/application-roles.properties" todir="${config.path}" verbose="true" overwrite="true" />
        <copy file="${temp.jboss.dir}/domain-${organization.name}/configuration/application-users.properties" todir="${config.path}" verbose="true" overwrite="true" />
        <copy file="conf/jboss/mgmt-users.properties" todir="${config.path}" verbose="true" overwrite="true" />
    </target>

    <target name="configure.bpms.modules" >
        <antcall target="download.and.unzip.bpms.deployer" />
    </target>

    <target name="configure.sy.modules" >
        <antcall target="download.and.unzip.sy.deployer" />
    </target>

    <target name="configure.pfp.app" >
        <antcall target="pfp.compile" />
        <if>
            <equals arg1="${pfp.skinny.war.enabled}" arg2="true" />
	        <then>
                <copy todir="${pfp.module.path}">
                    <fileset dir="${temp.pfp.module.build.dir}/dist/modules/system/layers/bpms">
                        <include name="**/*"/>
                    </fileset>
                </copy>	
		    </then>	
        </if>

        <!-- database drivers -->
                <echo message="deploying following db modules locally:  ${jdbc.module.name}" />
                <antcall target="filter">
                    <param name="source.dir" value="conf/${jdbc.module.name}/modules"/>
                    <param name="dest.dir" value="${pfp.module.path}"/>
                </antcall>
                <if><equals arg1="${jdbc.module.name}" arg2="postgresql" />
                    <then>
                        <copy overwrite="true" verbose="true" file="${postgresql.jdbc.lib.path}" todir="${temp.pfp.modules.dir}/org/postgresql/jdbc/main" />
                        <copy overwrite="true" verbose="true" file="${postgresql.jdbc.lib.path}" todir="${pfp.module.path}/org/postgresql/jdbc/main" />
                    </then></if>
                <if><equals arg1="${jdbc.module.name}" arg2="mysql" />
                    <then>
                        <copy overwrite="true" verbose="true" file="${mysql.jdbc.lib.path}" todir="${temp.pfp.modules.dir}/com/mysql/jdbc/main" />
                        <copy overwrite="true" verbose="true" file="${mysql.jdbc.lib.path}" todir="${pfp.module.path}/com/mysql/jdbc/main" />
                    </then></if>
                <if><equals arg1="${jdbc.module.name}" arg2="oracle" />
                    <then>
                        <copy overwrite="true" verbose="true" file="${oracle.jdbc.lib.path}" todir="${temp.pfp.modules.dir}/com/oracle/jdbc/main" />
                        <copy overwrite="true" verbose="true" file="${oracle.jdbc.lib.path}" todir="${pfp.module.path}/com/oracle/jdbc/main" />
                    </then></if>
                <if><equals arg1="${jdbc.module.name}" arg2="h2" />
                    <then><echo message="configure.jboss.modules() h2 driver already in eap6.*" /></then></if>
    </target> 

    <target name="local.deploy.jboss.modules" >
        <antcall target="configure.bpms.modules" />
        <!-- antcall target="configure.sy.modules" / -->
        <!-- https://community.jboss.org/wiki/LayeredDistributionsAndModulePathOrganization -->
        <copy todir="${jboss.home}/modules" file="conf/jboss/layers.conf" overwrite="true" />
    </target>

    <target name="resolve.droolsjbpm.dependencies" >
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" >
            <classpath>
                <pathelement location="lib/ant/maven-ant-tasks-2.1.3.jar"/>
            </classpath>
        </typedef>
        <artifact:pom id="droolsjbpm-build-bootstrap" file="${droolsjbpm.source.dir}/droolsjbpm-build-bootstrap/pom.xml" />
        <artifact:dependencies filesetId="droolsjbpm.deps.path" pomRefId="droolsjbpm-build-bootstrap" useScope="test" />
        <pathconvert pathsep="${line.separator}|   |- "
             property="echo.droolsjbpm.deps.path"
             refid="droolsjbpm.deps.path">
        </pathconvert>
        <echo message="droolsjbpm-build-bootstrap-version = ${echo.droolsjbpm.deps.path} " />
    </target> 

    <target name="local.configure.core.services">
        <for list="${org.jboss.eap.host.list}" param="serverIpAddr">
            <sequential>
                <var name="serverIpAddr" value="@{serverIpAddr}" />
                <antcall target="cli.batch">
                    <param name="cli.source.dir" value="conf/jboss/"/>
                    <param name="cli.to.filter.and.execute" value="core-services-up.cli"/>
                    <param name="cli.fail.on.error" value="true"/>
                </antcall>
            </sequential>
        </for>
    </target> 

    <target name="hornetq-config" >
        <antcall target="cli.batch">
            <param name="cli.source.dir" value="conf/hornetq/"/>
            <param name="cli.to.filter.and.execute" value="hornetq-config-down.cli"/>
            <param name="cli.fail.on.error" value="false"/>
        </antcall>
    </target>


    <target name="local.provision.ha.jvms">
        <sleep seconds="2"/>
        <antcall target="cli.batch">
            <param name="cli.source.dir" value="conf/hornetq/"/>
            <param name="cli.to.filter.and.execute" value="hornetq-config-group.cli"/>
            <param name="cli.fail.on.error" value="true"/>
        </antcall>
        <for list="${org.jboss.eap.host.list}" param="serverIpAddr">
            <sequential>
                <var name="serverIpAddr" value="@{serverIpAddr}" />
                <for list="${ha.server.number.list}" param="serverNum">
                  <sequential>
                    <var name="ha.server.id" value="ha-@{serverNum}" />
                    <math result="ha.port.increment" operand1="100" operation="*" operand2="@{serverNum}" datatype="int" />
                    <math result="ha.port.offset" operand1="${ha.group.port.offset}" operation="+" operand2="${ha.port.increment}" datatype="int" />
                    <var name="ha.server.id" value="ha-@{serverNum}" />
                    <if>
                        <equals arg1="${ha.server.id}" arg2="ha-0" />
                        <then><var name="ha.block" value="true" /></then>
                        <else><var name="ha.block" value="false" /></else>
                    </if>
                    <antcall target="cli.batch">
                        <param name="cli.source.dir" value="conf/hornetq/"/>
                        <param name="cli.to.filter.and.execute" value="hornetq-config-server.cli"/>
                        <param name="cli.fail.on.error" value="true"/>
                    </antcall>
                        <antcall target="cli.batch">
                        <param name="cli.source.dir" value="conf/hornetq/"/>
                        <param name="cli.to.filter.and.execute" value="hornetq-config-up.cli"/>
                        <param name="cli.fail.on.error" value="true"/>
                    </antcall>
                  </sequential>
                </for>
            </sequential>
        </for>
    </target>
    <!--
      pass following parameters to this target :
        1) org.jboss.processFlow.provision.pfpCore
        2) refresh.master (optional)
    -->
    <target name="local.provision.pfp.core">
        <if>
            <equals arg1="${org.jboss.processFlow.provision.pfpCore}" arg2="true" />
            <then>
                <if>
                    <equals arg1="${refresh.master}" arg2="true" />
                    <then><antcall target="refresh.master" /></then>
                </if>
                <copy todir="${jboss.home}/domain-${organization.name}/configuration" file="conf/pfp/kie.deployments.json" overwrite="true" />
                <copy todir="${jboss.home}/domain-${organization.name}/configuration" file="conf/pfp/${org.quartz.property.file.name}" overwrite="true" />
                <antcall target="filter">
                    <param name="source.dir" value="conf/pfp/bpms-pfp.ear"/>
                    <param name="dest.dir" value="${temp.pfp.services.dir}/bpms-pfp.ear.work"/>
                </antcall>
                <zip destfile="${temp.pfp.services.dir}/bpms-pfp.ear">
                    <zipfileset dir="${temp.pfp.services.dir}/bpms-pfp.ear.work" />
                    <zipfileset dir="${temp.pfp.services.dir}" >
                        <include name="processFlow-cdiDiagnostics.jar" />
                        <include name="kie-services-remote.war" />
                    </zipfileset>
                </zip>
                <math result="hornetq.remoting.port" operand1="${base.remoting.port}" operation="+" operand2="${ha.group.port.offset}" datatype="int" />
                <antcall target="cli.batch">
                    <param name="cli.source.dir" value="conf/pfp"/>
                    <param name="cli.to.filter.and.execute" value="pfp-server-group.cli"/>
                    <param name="cli.fail.on.error" value="true"/>
                </antcall>
                <for list="${org.jboss.eap.host.list}" param="serverIpAddr">
                    <sequential>
                        <var name="serverIpAddr" value="@{serverIpAddr}" />
                        <for list="${pfp.core.server.number.list}" param="serverNum">
                            <sequential>
                              <var name="pfp.core.server.id" value="pfp-core-@{serverNum}" />
                              <math result="pfp.core.port.increment" operand1="100" operation="*" operand2="@{serverNum}" datatype="int" />
                              <math result="pfp.core.port.offset" operand1="${pfp.core.base.port.offset}" operation="+" operand2="${pfp.core.port.increment}" datatype="int" />
                              <math result="pfp.core.debugger.port" operand1="${pfp.core.base.debugger.port}" operation="+" operand2="${pfp.core.port.increment}" datatype="int" />
                              <var name="server.specific.hibernate.hbm2ddl.auto" value="validate" />
                              <if>
                                <equals arg1="${pfp.core.server.id}" arg2="pfp-core-0" />
                                <then><var name="server.specific.hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" /></then>
                              </if>
                              <echo message="local.provision.pfp.core() serverIpAddr=${serverIpAddr}  : pfp.core.server.id=${pfp.core.server.id} : pfp.core.port.offset=${pfp.core.port.offset} : pfp.core.debugger.port = ${pfp.core.debugger.port}  : server.specific.hibernate.hbm2ddl.auto = ${server.specific.hibernate.hbm2ddl.auto} " />
                              <antcall target="cli.batch">
                                <param name="cli.source.dir" value="conf/pfp"/>
                                <param name="cli.to.filter.and.execute" value="pfp-server-up.cli"/>
                                <param name="cli.fail.on.error" value="true"/>
                              </antcall>
                            </sequential>
                        </for>
                    </sequential>
                </for>
            </then>
            <else>
                <echo message="local.provision.pfp.core:  org.jboss.processFlow.provision.pfpCore = ${org.jboss.processFlow.provision.pfpCore}" />
            </else>
        </if>
    </target>

    <!--
      pass following parameters to this target :
        1) org.jboss.processFlow.provision.switchyard
        2) refresh.master (optional)
    -->
    <target name="local.provision.switchyard">
        <if>
            <equals arg1="${org.jboss.processFlow.provision.switchyard}" arg2="true" />
            <then>
                <if>
                    <equals arg1="${refresh.master}" arg2="true" />
                    <then><antcall target="refresh.master" /></then>
                </if>
                <antcall target="cli.batch">
                    <param name="cli.source.dir" value="conf/switchyard"/>
                    <param name="cli.to.filter.and.execute" value="sy-server-group.cli"/>
                    <param name="cli.fail.on.error" value="true"/>
                </antcall>
                <for list="${org.jboss.eap.host.list}" param="serverIpAddr">
                    <sequential>
                        <var name="serverIpAddr" value="@{serverIpAddr}" />
                          <for list="${sy.core.server.number.list}" param="serverNum">
                            <sequential>
                                <var name="sy.core.server.id" value="sy-core-@{serverNum}" />
                                <math result="sy.core.port.increment" operand1="100" operation="*" operand2="@{serverNum}" datatype="int" />
                                <math result="sy.core.port.offset" operand1="${sy.core.base.port.offset}" operation="+" operand2="${sy.core.port.increment}" datatype="int" />
                                <math result="sy.core.debugger.port" operand1="${sy.core.base.debugger.port}" operation="+" operand2="${sy.core.port.increment}" datatype="int" />
                                <echo message="sy.core.server.id=${sy.core.server.id} : sy.core.port.offset=${sy.core.port.offset} : sy.core.debugger.port = ${sy.core.debugger.port}" />
                                <antcall target="cli.batch">
                                    <param name="cli.source.dir" value="conf/switchyard"/>
                                    <param name="cli.to.filter.and.execute" value="sy-server-up.cli"/>
                                    <param name="cli.fail.on.error" value="true"/>
                                </antcall>
                            </sequential>
                        </for>
                    </sequential>
                </for>
            </then>
            <else>
                <echo message="local.provision.switchyard:  org.jboss.processFlow.provision.switchyard = ${org.jboss.processFlow.provision.switchyard}" />
            </else>
        </if>
    </target>


    <!--
      pass following parameters to this target :
        1) org.jboss.processFlow.provision.brmsWebs (optional)
        2) refresh.master (optional)
    -->
    <target name="local.provision.brms.webs">
        <if>
            <equals arg1="${org.jboss.processFlow.provision.brmsWebs}" arg2="true" />
            <then>
                <if>
                    <equals arg1="${refresh.master}" arg2="true" />
                    <then><antcall target="refresh.master" /></then>
                </if>
                <!-- in clustered environment, needs to change to HA EJB ?  -->
                <math result="pfp.core.remoting.port" operand1="${base.remoting.port}" operation="+" operand2="${pfp.core.base.port.offset}" datatype="int" />
                <antcall target="cli.batch">
                    <param name="cli.source.dir" value="conf/brmsWebs"/>
                    <param name="cli.to.filter.and.execute" value="brmsWebs-config-up.cli"/>
                    <param name="cli.fail.on.error" value="true"/>
                </antcall> 
            </then>
            <else>
                <echo message="local.provision.brms.webs:  org.jboss.processFlow.provision.brmsWebs = ${org.jboss.processFlow.provision.brmsWebs}" />
            </else>
        </if>
    </target>

    <macrodef name="iterate">
        <attribute name="target"/>
        <sequential>
            <subant target="@{target}">
                <fileset dir="services/cdiDiagnostics" includes="build.xml"/>
                <fileset dir="services/kie-services-remote" includes="build.xml"/>
            </subant>
        </sequential>
    </macrodef>


    <target name="pfp.clean" description="" >
        <if>
            <available file="services" type="dir" />
            <then>
                <iterate target="clean" />
                <if>
                    <available file="${build.dir}" type="dir" />
                    <then>
                        <delete includeemptydirs="true">
                            <fileset dir="${build.dir}" excludes="lib/**/*,openshiftAccount.properties" />
                        </delete>
                    </then>
                </if>
            </then>
        </if>
        <delete dir="${distro.clean}" />
        <delete dir="privateServiceTaskRepo/${build.dir}" />
        <delete dir="osProvision/${build.dir}" />
    </target>

    <target name="download.and.unzip.sy.deployer">
        <get src="${switchyard.deployer.download.url}" dest="${install.home}/lib/"  skipexisting="true" />
        <unzip src="${install.home}/lib/${switchyard.zip.name}" dest="${jboss.home}/../" />
    </target>

    <target name="mkPfpDirs">
        <mkdir dir="${temp.pfp.lib.dir}" />
        <mkdir dir="${temp.pfp.services.dir}" />
        <mkdir dir="${install.home}/lib" />
        <mkdir dir="${pfp.module.path}" />
        <mkdir dir="${sy.module.path}" />
    </target>

    <target name="pfp.compile" depends="mkPfpDirs" description="" >
        <if>
            <available file="services" type="dir" />
            <then><iterate target="all" /></then>
        </if>
        <if>
            <equals arg1="${pfp.skinny.war.enabled}" arg2="true" />
            <then>
    		    <antcall target="pfp.make.skinny.war" />
    		    <copy todir="${temp.pfp.services.dir}" file="${temp.pfp.module.build.dir}/dist/standalone/deployments/bpms-pfp.war" overwrite="true" />
            </then>
        </if>
    </target>

    <target name="pfp.refresh.bpms" description="">
        <delete file="${install.home}/lib/${bpms.deployer.zip.name}" />
        <antcall target="download.and.unzip.bpms.deployer" />
        <copy todir="${jboss.home}/modules" file="conf/jboss/layers.conf" overwrite="true" />
        <antcall target="local.bounce.pfp.core" />
    </target>
	
    <target name="pfp.make.skinny.war" description="">
	    <mkdir dir="${temp.pfp.module.build.dir}" />
        <antcall target="filter">
            <param name="source.dir" value="conf/pfp/pfp-modules"/>
            <param name="dest.dir" value="${temp.pfp.module.build.dir}"/>
        </antcall>
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="${development.base}/bin/build-modules.sh"/>
           <arg value="modules/bpms-pfp-modules.list"/>
           <arg value="modules/eap-6.1.0-modules.list"/>
           <arg value="bpms-pfp"/>
           <arg value="${temp.pfp.services.dir}/kie-services-remote.war"/>
        </exec>
    </target>	

    <target name="all" >
        <antcall target="download.and.unzip.bpms.deployer" />
        <antcall target="refresh.master" />
        <antcall target="refresh.slave.hosts" />
        <antcall target="local.configure.core.services" />
        <antcall target="local.provision.brms.webs">
            <param name="refresh.master" value="false"/>
        </antcall>
        <antcall target="local.provision.ha.jvms" />
        <antcall target="local.provision.pfp.core">
            <param name="refresh.master" value="false"/>
        </antcall>
        <antcall target="local.provision.switchyard">
            <param name="refresh.master" value="false"/>
        </antcall>
    </target>
</project>
